use clap::{App, AppSettings, Arg, SubCommand};

pub fn build_cli() -> App<'static, 'static> {
    app_from_crate!()
        .setting(AppSettings::DeriveDisplayOrder)
        .setting(AppSettings::VersionlessSubcommands)
        .subcommand(SubCommand::with_name("add")
            .about("add folder to list")
            .arg(Arg::with_name("Target Project path")
                .help("Target Project path [\".\" = current path]")
                .required(true)
                .takes_value(true) 
            )
            .arg(Arg::with_name("New Boilerplate name")
                .help("New Boilerplate name")
                .takes_value(true) 
            )
            .arg(Arg::with_name("force")
                .help("Overwrite if duplicates")
                .short("f")
                .long("force")
            )
        )
        .subcommand(SubCommand::with_name("rm")
            .about("remove boilerplate")
            .arg(Arg::with_name("Boilerplate name")
                .help("boilerplate name")
                .required(true)
                .takes_value(true) 
            )
        )
        .subcommand(SubCommand::with_name("ls")
            .about("boilerplate list")
        )

        .subcommand(SubCommand::with_name("init")
            .about("initialize project")
            .arg(Arg::with_name("Boilerplate name")
                .help("Boilerplate name")
                // .short("-b")
                // .long("boilerplate_name")
                .takes_value(true)
            )
            .arg(Arg::with_name("Project name")
                .help("Project name")
                // .short("p")
                // .long("project_name")
                .takes_value(true)
            )
            .arg(Arg::with_name("interactive")
                .help("Select project with key")
                .short("i")
                .long("interactive")
            )
        )

        .subcommand(SubCommand::with_name("ignore")
            .about("about global ignore files")
            .subcommand(SubCommand::with_name("ls")
                .about("show ignore list")
            )
            .subcommand(SubCommand::with_name("add")
                .about("add ignore file")
                .arg(Arg::with_name("Add target ignore file name")
                    .help("Target ignore file name")
                    .takes_value(true) 
                )
            )
            .subcommand(SubCommand::with_name("rm")
                .about("Remove ignore file")
                .arg(Arg::with_name("Remove target ignore file name")
                    .help("Target ignore file name")
                    .takes_value(true) 
                )
            )
        )
}